ARG BASE_IMAGE=nvcr.io/nvidia/l4t-jetpack:r35.4.1
############################
# Stage 1: build ctranslate2
############################
FROM ${BASE_IMAGE} AS ct2-builder

USER root
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
      git build-essential cmake ninja-build \
      python3 python3-pip python3-dev pybind11-dev \
      libopenblas-dev \
  && rm -rf /var/lib/apt/lists/*

COPY --from=ghcr.io/astral-sh/uv:0.7.20 /uv /usr/local/bin/uv
RUN uv python install 3.12
RUN git clone --recursive https://github.com/OpenNMT/CTranslate2.git /opt/src/ctranslate2
RUN bash -lc 'cd /opt/src/ctranslate2 && git checkout v4.4.0'
COPY ctranslate2/4_4/CMakeLists.txt /opt/src/ctranslate2/CMakeLists.txt
# 62 for TX2  72 for Xavier  87 for Orin
RUN cd /opt/src/ctranslate2 && mkdir build  && cd build && cmake .. \
      -DCMAKE_BUILD_TYPE=Release \
      -DTHREADS_PREFER_PTHREAD_FLAG=ON \
      -DCMAKE_C_FLAGS="-pthread" \
      -DCMAKE_CXX_FLAGS="-pthread" \
      -DCMAKE_EXE_LINKER_FLAGS="-pthread" \
      -DCMAKE_SHARED_LINKER_FLAGS="-pthread" \
      -DCMAKE_CUDA_ARCHITECTURES="62;72;87" \
      -DCUDA_ARCH_LIST="6.2;7.2;8.7" \
      && make -j8 VERBOSE=1 && make install && ldconfig

RUN PY312="$(uv python find 3.12)" && \
    cd /opt/src/ctranslate2/python && \
    "$PY312" -m pip install -r install_requirements.txt --break-system-packages && \
    "$PY312" setup.py bdist_wheel && \
    mkdir -p /opt/wheels && \
    cp dist/*.whl /opt/wheels/

############################
# Stage 2: runtime
############################
FROM ${BASE_IMAGE}
LABEL org.opencontainers.image.source="https://github.com/EvensXia/speaches-l4t"
LABEL org.opencontainers.image.licenses="MIT"
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ca-certificates curl ffmpeg libopenblas0 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# -------------------------------------------------------------------
COPY --from=ct2-builder /usr/local/lib/libctranslate2* /usr/local/lib/
RUN ldconfig
# -------------------------------------------------------------------
RUN useradd --create-home --shell /bin/bash --uid 1000 ubuntu || true
USER ubuntu
ENV HOME=/home/ubuntu \
    PATH=/home/ubuntu/.local/bin:$PATH
WORKDIR $HOME/speaches
COPY --chown=ubuntu --from=ghcr.io/astral-sh/uv:0.7.20 /uv /bin/uv
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --compile-bytecode --no-install-project --extra ui
    
COPY --chown=ubuntu . .
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --compile-bytecode --extra ui
# -------------------------------------------------------------------
COPY --from=ct2-builder /opt/wheels/ctranslate2-*.whl /tmp/
RUN --mount=type=cache,target=/root/.cache/uv \
    WHEEL_PATH=$(find /tmp -name "ctranslate2-*.whl") && \
    uv pip install --no-deps --force-reinstall "$WHEEL_PATH" \
    --python $HOME/speaches/.venv/bin/python \
    --target $HOME/speaches/.venv
# -------------------------------------------------------------------
RUN mkdir -p $HOME/.cache/huggingface/hub
ENV UVICORN_HOST=0.0.0.0
ENV UVICORN_PORT=8000
ENV PATH="$HOME/speaches/.venv/bin:$PATH"
ENV HF_HUB_ENABLE_HF_TRANSFER=0
ENV DO_NOT_TRACK=1
ENV GRADIO_ANALYTICS_ENABLED="False"
ENV DISABLE_TELEMETRY=1
ENV HF_HUB_DISABLE_TELEMETRY=1
EXPOSE 8000
CMD ["uvicorn", "--factory", "speaches.main:create_app"]
